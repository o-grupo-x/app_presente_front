name: CI/CD para Frontend - App Presente

on:
  push:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: Obter commit SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build e Push da imagem
        run: |
          docker build -t guilherme310402/app_presente_front:${{ steps.vars.outputs.SHORT_SHA }} .
          docker push guilherme310402/app_presente_front:${{ steps.vars.outputs.SHORT_SHA }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commit SHA
        id: commit
        run: echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT

      - name: Autenticar no Google Cloud
        id: 'auth'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CLOUD_KEYS }}
          project_id: app-chamada-5706

      - name: Instalar SDK do GCP e kubectl
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: app-chamada-5706
          install_components: 'kubectl'

      - name: Instalar plugin de auth do GKE
        run: |
          sudo curl -Lo /usr/local/bin/gke-gcloud-auth-plugin \
            https://storage.googleapis.com/gke-release/gke-gcloud-auth-plugin/linux/amd64/gke-gcloud-auth-plugin
          sudo chmod +x /usr/local/bin/gke-gcloud-auth-plugin
          echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV

      - name: Configurar acesso ao cluster GKE
        run: |
          gcloud container clusters get-credentials devops-cluster \
            --region us-central1 \
            --project app-chamada-5706

      - name: Deploy no Kubernetes
        run: |
          kubectl set image deployment/app-presente-front -n stage-app-presente \
            app-presente-front=guilherme310402/app_presente_front:${{ steps.commit.outputs.SHORT_SHA }}
          
          kubectl patch deployment app-presente-front -n stage-app-presente \
            -p '{"spec":{"template":{"spec":{"nodeSelector":{"kubernetes.io/arch":"amd64"}}}}}'

          kubectl rollout restart deployment/app-presente-front -n stage-app-presente
          kubectl rollout status deployment/app-presente-front -n stage-app-presente --timeout=120s
