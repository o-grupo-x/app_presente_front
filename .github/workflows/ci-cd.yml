name: CI/CD Frontend com SHA + Token GCP

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: guilherme310402/app_presente_front

    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: Definir SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT

      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build e Push da imagem com SHA
        run: |
          docker build -t $IMAGE_NAME:${{ steps.vars.outputs.SHORT_SHA }} .
          docker push $IMAGE_NAME:${{ steps.vars.outputs.SHORT_SHA }}

      - name: Instalar kubectl
        run: |
          sudo apt-get update
          sudo apt-get install -y kubectl

      - name: Configurar kubectl com token
        env:
          GKE_ENDPOINT: ${{ secrets.GKE_ENDPOINT }}
          GCP_ACCESS_TOKEN: ${{ secrets.GCP_ACCESS_TOKEN }}
          GKE_CA_BASE64: ${{ secrets.GKE_CA_BASE64 }}
        run: |
          mkdir -p ~/.kube
          echo "$GKE_CA_BASE64" | base64 -d > $HOME/.kube/ca.crt

          kubectl config set-cluster gke-cluster \
            --server=$GKE_ENDPOINT \
            --certificate-authority=$HOME/.kube/ca.crt

          kubectl config set-credentials gke-user \
            --token=$GCP_ACCESS_TOKEN

          kubectl config set-context gke-context \
            --cluster=gke-cluster \
            --user=gke-user \
            --namespace=stage-app-presente

          kubectl config use-context gke-context

      - name: Deploy para o GKE com imagem versionada
        run: |
          kubectl -n stage-app-presente apply -f frontend-deployment.yaml -f frontend-service.yaml
          kubectl set image deployment/app-presente-front -n stage-app-presente app-presente-front=$IMAGE_NAME:${{ steps.vars.outputs.SHORT_SHA }}
          kubectl patch deployment app-presente-front -n stage-app-presente -p '{"spec":{"template":{"spec":{"nodeSelector":{"kubernetes.io/arch":"amd64"}}}}}'
          kubectl rollout restart deployment/app-presente-front -n stage-app-presente
          kubectl rollout status deployment/app-presente-front -n stage-app-presente --timeout=120s
